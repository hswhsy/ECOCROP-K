// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ecocropK
List ecocropK(NumericVector inparams, NumericVector Tmax, NumericVector Tmin, NumericVector Prcp, LogicalVector rainfed, String method);
RcppExport SEXP _ecocropK_ecocropK(SEXP inparamsSEXP, SEXP TmaxSEXP, SEXP TminSEXP, SEXP PrcpSEXP, SEXP rainfedSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type inparams(inparamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Tmax(TmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Tmin(TminSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Prcp(PrcpSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type rainfed(rainfedSEXP);
    Rcpp::traits::input_parameter< String >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(ecocropK(inparams, Tmax, Tmin, Prcp, rainfed, method));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ecocropK_ecocropK", (DL_FUNC) &_ecocropK_ecocropK, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_ecocropK(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
